name: Node.js CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Cache TypeScript build
      uses: actions/cache@v4
      with:
        path: dist
        key: ${{ runner.os }}-ts-build-${{ matrix.node-version }}-${{ hashFiles('src/**/*.ts') }}-${{ hashFiles('tsconfig.json') }}
    
    - name: Display Node and npm versions
      run: |
        node -v
        npm -v
    
    - name: Install dependencies
      run: npm ci
      
    - name: Display TypeScript version
      run: npx tsc --version
    
    - name: Build
      run: npm run build
      continue-on-error: true
      id: build
    
    - name: Debug build failures
      if: steps.build.outcome == 'failure'
      run: |
        echo "TypeScript build failed on Node.js version ${{ matrix.node-version }}"
        echo "Environment:"
        npm list typescript
        node -p "process.versions"
        
    - name: Test
      run: npm test
      continue-on-error: true
      id: test
    
    - name: Upload coverage report
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report-${{ matrix.node-version }}-${{ github.run_id }}-${{ github.run_attempt }}
        path: coverage/
      if: success() || failure()
    
    - name: Upload logs on failure
      if: failure() || steps.test.outcome == 'failure'
      uses: actions/upload-artifact@v4
      with:
        name: npm-logs-${{ matrix.node-version }}-${{ github.run_id }}-${{ github.run_attempt }}
        path: |
          npm-debug.log*
          yarn-debug.log*
          yarn-error.log*
          lerna-debug.log*
          .npm